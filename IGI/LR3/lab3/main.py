from task1 import task1
from task2 import sum_positive_nums
from task3 import count_letters
from task4 import task4
from task5 import task5

def repeat_task():
    # Функция для запроса повторения запуска команды
    while True:
        choice = input("Желаете выполнить программу еще раз? 1 - да, иначе - нет: ")
        if choice == "1":
            return True
        else:
            return False

def main():
    while True:
        try:
            choice = int(input("1- Вывести информацию о задаче, 2 - Ввести номер задачи для решения: "))
            if choice == 1:
                numTask = int(input("Введите номер задания(1-5): "))
                if numTask == 1:
                    print('''\nСоставить программу для вычисления значения функции c помощью разложения функции в степенной ряд.
Задать точность вычислений eps. Предусмотреть максимальное количество итераций, равное 500.
Степенное разложение: 1 / x = sum(0, +inf)x^n = 1 + x + x^2 + ..., |x|<1\n''')
                elif numTask == 2:
                    print('''\nОрганизовать цикл, который принимает целые числа и суммирует их. Окончание цикла – ввод отрицательного числа\n''')
                elif numTask == 3:
                    print('''\nВ строке, вводимой с клавиатуры, подсчитать количество символов, лежащих в диапазоне от 'f' до 'y'\n''')
                elif numTask == 4:
                    print('''\nДана строка текста, в которой слова разделены пробелами и запятыми. Нужно:
а) определить количество слов, заключенных в кавычки;
б) определить, сколько раз повторяется каждая буква;
в) вывести в алфавитном порядке все словосочетания, отделенные запятыми\n''')
                elif numTask == 5:
                    print('''\nCоставить программу для обработки вещественных списков
Программа должна содержать следующие базовые функции:
1) ввод элементов списка пользователем;
2) проверка корректности вводимых данных;
3) реализация основного задания с выводом результатов;
4) вывод списка на экран.
Найти максимальный по модулю элемент списка и сумму элементов списка, расположенных между первым и вторым отрицательными элементами\n''')
                else:
                    print("Введите число от 1 до 5!!!")
                    continue
            elif choice == 2:
                numTask = int(input("Введите номер задания(1-5): "))
                if numTask == 1:
                    task1()
                elif numTask == 2:
                    sum_positive_nums()
                elif numTask == 3:
                    count_letters()
                elif numTask == 4:
                    task4()
                elif numTask == 5:
                    task5()
                else:
                    print("Введите число от 1 до 5!!!")
                    continue
            else:
                print("Введите число от 1 до 5!!!")
                continue
            if not repeat_task():
                break
        except ValueError:
            print("Ошибка ввода")
            continue

"""
Выражение __name__ == "__main__" используется для определения того, был ли текущий модуль запущен 
напрямую из командной строки или импортирован как модуль в другой программе.
"""
if __name__ == "__main__":
    main()